security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    role_hierarchy:
        ROLE_TRAINER: [ROLE_USER]
        ROLE_ADMIN: [ROLE_TRAINER]

    providers:
        email_identified_users:
            entity:
                class: App\Entity\User
                property: email
        token_identified_users:
            entity:
                class: App\Entity\User
                property: token
        all_users:
            chain:
                providers: [ 'email_identified_users', 'token_identified_users']

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api/basic
            stateless: true
            provider: all_users
            http_basic:
                realm: Secured Area
        admin:
            pattern: ^/admin
            provider: all_users
            form_login:
                login_path: admin_login
                check_path: admin_login
            logout:
                path: admin_logout
                target: admin
        main:
            lazy: true
            stateless: true
            provider: all_users
            json_login:
                check_path: api_login
                username_path: email
            custom_authenticators:
                - App\Security\ApiKeyAuthenticator

    access_control:
        - { path: ^/admin/login, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/api/user, roles: PUBLIC_ACCESS }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        - { path: ^/api/trainer, roles: ROLE_TRAINER }
        - { path: ^/api, roles: ROLE_USER }
        - { path: ^/api/messages, roles: ROLE_ADMIN}

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
